package Homework;

public class Questions_Chapter_7 {
//    1. Имеет ли суперкласс доступ к членам подкласса? Имеет ли подкласс доступ к
//    членам суперкласса?
/**
 *Cупер класс, не имеет доступ к членам подкласса, это обусловленно тем, чтобы избежать путаницы,
 * так как подкласс наследует, супер класс, а не наоборот.
 * Да подкласс, имеет доступ к членам
 */

//  2. Создайте подкласс Circle, производный от класса TwoDShape. В нем должен
//    быть определен метод area (), вычисляющий площадь круга, а также конструктор
//    с ключевым словом super для инициализации членов, унаследованных от класса
//    TwoDShape.

    /**
     * @param  TwoDShape_abstr
     */

    //3. Как предотвратить обращение к членам суперкласса из подкласса?
    /**
     * Ключевым словом final
     */

    //4. Опишите назначение и два варианта использования ключевого слова super.
    /**
     * super - означает обратиться к супер классу
     * super(); - вызвать конструктор суперкласса
     * super.show(); вызвать метод из супер класса
     */
//    5. Допустим, имеется следующая иерархия классов.
//    class Alpha { ...
//        class Beta extends Alpha
//        Class Gamrna extends Beta
//        В каком порядке вызываются конструкторы этих классов при создании объекта
//        класса Gamma?
/**
 * от восходяшего,  от супер к подклассам
 */

//6. Переменная ссылки на суперкласс может указывать на объект подкласса. Объяс­
//   ните, почему это важно и как это связано с переопределением методов?
/**
 *Не понял вопроса, ну переменные могут иметь ссылки, на объекты классов,
 * Переопределение методов, нужно для пользы, так как метод который подсчитывает площадь
 * у разных классов (круг, квадрат, треугольник) будет разный, и если мы отправляем ссылку,
 * объекта круга, объекту фигура, то и сылка будет передасться как фигура, круг просто не сможет передасться,
 * так как в классе фигура, есть методы и переменные относяшиеся к фигуре.
 *
 */

//7. Что такое абстрактный класс?
    /**
     * Ну абстрактный класс, больше подходить аля макетом для подклассов, потому что имеет абстрактные методы,
     * которые не имеют тела, а лишь обьявляются, и когда подкласс унаследует супер-класс, то код не скомпилируется,
     * пока в классе не будут переопределены абстрактные-методы
     */

    //8. Как предотвратить переопределение метода? И как предотвратить наследование класса?
    /**
     * просто перед указанием типа метода, или объявления класса, указать слово final
     * таким образом, мы просто говорим, что данный класс, является финальным, и не может наследоватся
     * также и метод, мы просто объявили, что метод финальный, завершенный, индивидуальный, и не переопределяеться
     */

//9. Объясните, каким образом механизмы наследования, переопределения методов и
//   абстрактные классы используются для поддержки полиморфизма.
/**
 * Читал но если честно, писал код, но честно не доконца понял, что такое полиморфизм, как мне показалось
 * это раздутая тема, которая на практике не приминима, возможноя ошибаюсь.
 * Полиморфизм, и все наследование, показывает что можно разные объекты, друш-другу, передавать ссылки
 * копирование объекта, например фигура, может скопировать объект, квадрат, но у фигуры будет лишь две перменных
 * высота и ширина, а у квадрата 4 стороны, соотвественно, когда ме сделаем фигура=квадрат, то квадрат отдаст только те
 * данные, которые принимает фигура, высоту шириную И без наследования и переопределения метода, мы такого не смогли осушествить
 */

//10. Какой класс является суперклассом всех остальных классов?
/**
 * класс Object
 */

//11. Класс, который содержит хотя бы один абстрактный метод, должен быть объяв­
//лен абстрактным. Верно или не верно?
/**
 * Да верно. Один и более абстрактных методов
 */
//12. Какое ключевое слово следует использовать для создания именованной константы?
    /**
     * Да на своё усмотрение, как тебе удобно, просто в практике программистов,
     * есть правила, если переменная константа, то она объявляется
     * (частью речи и англ) и все буквы заглавлены НАпример: первый месяц года
     * (январь = 0) final int JANUARY = 0;
     */



}
